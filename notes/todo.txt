TODO:
- Combine state and store
- Fix unnecessary double render from server
  - Why aren't we just updating on the server and not triggering a re-render?
  - Does it keep the server logic cleaner?
  - I could see this causing an issue on the server if we enter and then have to wait for a second render
  
- Move store to be second argument type and remove @ts-ignore from App.tsx
- Instead of Location<'Button'> for a container it should be Location<'/'>
  - Containers should be written for routes, but no updates to components are needed
- Clean up types
- All params are currently required to be optional
  - See if it's because return type is using union

- Test navigating to a different route
- Try building a navigational app ala. smart-tv
// Write different containers for the same component that can be used by the server
const containers = {
  default: (props) => {
    const useDispatch = useAppDispatch();
    return (
      <div className="container">
        <Card {...props} onClick={() => 'do this thing'} />
      </div>
    );
  },
  video: (props) => (
    <div className="container-video">
      <Card {...props} onClick={() => 'do this thing'} />
    </div>
  ),
}



- Add button press css
- Fix input styling
- Replace string math with your own math function
- Automate component/index.tsx creation
- Eslint plugin error
- Keyboard shortcuts

Not yet considered
- Update to newest CRA
- Add history
  - Either using to, or an event listener
